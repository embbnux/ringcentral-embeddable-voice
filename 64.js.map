{"version":3,"file":"64.js","mappings":"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","sources":["webpack://ringcentral-embeddable/./node_modules/blueimp-md5/js/md5.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/event-emitter.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/rc-message/rc-message.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/inbound.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/index.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/outbound/index.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/outbound/request.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/outbound/response.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/sip-message/response-codes.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/dist/esm/utils.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/ignoreAttributes.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/util.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/validator.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://ringcentral-embeddable/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/node_modules/uuid/dist/esm-browser/native.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/node_modules/uuid/dist/esm-browser/rng.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/node_modules/uuid/dist/esm-browser/stringify.js","webpack://ringcentral-embeddable/./node_modules/ringcentral-web-phone-beta-2/node_modules/uuid/dist/esm-browser/v4.js","webpack://ringcentral-embeddable/./node_modules/strnum/strnum.js"],"sourcesContent":["/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n/* eslint-disable strict */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Add integers, wrapping at 2^32.\n   * This uses 16-bit operations internally to work around bugs in interpreters.\n   *\n   * @param {number} x First integer\n   * @param {number} y Second integer\n   * @returns {number} Sum\n   */\n  function safeAdd(x, y) {\n    var lsw = (x & 0xffff) + (y & 0xffff)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xffff)\n  }\n\n  /**\n   * Bitwise rotate a 32-bit number to the left.\n   *\n   * @param {number} num 32-bit number\n   * @param {number} cnt Rotation count\n   * @returns {number} Rotated number\n   */\n  function bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} q q\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n  }\n\n  /**\n   * Calculate the MD5 of an array of little-endian words, and a bit length.\n   *\n   * @param {Array} x Array of little-endian words\n   * @param {number} len Bit length\n   * @returns {Array<number>} MD5 Array\n   */\n  function binlMD5(x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << len % 32\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /**\n   * Convert an array of little-endian words to a string\n   *\n   * @param {Array<number>} input MD5 Array\n   * @returns {string} MD5 string\n   */\n  function binl2rstr(input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)\n    }\n    return output\n  }\n\n  /**\n   * Convert a raw string to an array of little-endian words\n   * Characters >255 have their high-byte silently ignored.\n   *\n   * @param {string} input Raw input string\n   * @returns {Array<number>} Array of little-endian words\n   */\n  function rstr2binl(input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32\n    }\n    return output\n  }\n\n  /**\n   * Calculate the MD5 of a raw string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrMD5(s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /**\n   * Calculates the HMAC-MD5 of a key and some data (raw strings)\n   *\n   * @param {string} key HMAC key\n   * @param {string} data Raw input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrHMACMD5(key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5c5c5c5c\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /**\n   * Convert a raw string to a hex string\n   *\n   * @param {string} input Raw input string\n   * @returns {string} Hex encoded string\n   */\n  function rstr2hex(input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n    }\n    return output\n  }\n\n  /**\n   * Encode a string as UTF-8\n   *\n   * @param {string} input Input string\n   * @returns {string} UTF8 string\n   */\n  function str2rstrUTF8(input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /**\n   * Encodes input string as raw MD5 string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawMD5(s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  /**\n   * Encodes input string as Hex encoded string\n   *\n   * @param {string} s Input string\n   * @returns {string} Hex encoded string\n   */\n  function hexMD5(s) {\n    return rstr2hex(rawMD5(s))\n  }\n  /**\n   * Calculates the raw HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawHMACMD5(k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  /**\n   * Calculates the Hex encoded HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function hexHMACMD5(k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  /**\n   * Calculates MD5 value for a given string.\n   * If a key is provided, calculates the HMAC-MD5 value.\n   * Returns a Hex encoded string unless the raw argument is given.\n   *\n   * @param {string} string Input string\n   * @param {string} [key] HMAC key\n   * @param {boolean} [raw] Raw output switch\n   * @returns {string} MD5 output\n   */\n  function md5(string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n})(this)\n","class EventEmitter {\n    // deno-lint-ignore no-explicit-any\n    listeners = new Map();\n    // This is used to store temporary listeners that are only called once\n    // deno-lint-ignore no-explicit-any\n    tempListeners = new Map();\n    // deno-lint-ignore no-explicit-any\n    on(eventName, listener) {\n        if (!this.listeners.has(eventName)) {\n            this.listeners.set(eventName, []);\n        }\n        this.listeners.get(eventName).push(listener);\n    }\n    // deno-lint-ignore no-explicit-any\n    once(eventName, listener) {\n        if (!this.tempListeners.has(eventName)) {\n            this.tempListeners.set(eventName, []);\n        }\n        this.tempListeners.get(eventName).push(listener);\n    }\n    // deno-lint-ignore no-explicit-any\n    off(eventName, listener) {\n        let list = this.listeners.get(eventName);\n        if (list) {\n            this.listeners.set(eventName, list.filter((l) => l !== listener));\n        }\n        list = this.tempListeners.get(eventName);\n        if (list) {\n            this.tempListeners.set(eventName, list.filter((l) => l !== listener));\n        }\n    }\n    // deno-lint-ignore no-explicit-any\n    emit(eventName, ...args) {\n        (this.listeners.get(eventName) ?? []).forEach((listener) => listener(...args));\n        (this.tempListeners.get(eventName) ?? []).forEach((listener) => listener(...args));\n        this.tempListeners.delete(eventName);\n    }\n    removeAllListeners() {\n        this.listeners.clear();\n        this.tempListeners.clear();\n    }\n}\nexport default EventEmitter;\n","import { XMLBuilder, XMLParser } from \"fast-xml-parser\";\nclass RcMessage {\n    static xmlOptions = {\n        ignoreAttributes: false,\n        attributeNamePrefix: \"\",\n        attributesGroupName: \"$\",\n        format: false,\n        suppressEmptyNode: true,\n    };\n    static fromXml(_xmlStr) {\n        let xmlStr = _xmlStr;\n        if (xmlStr.startsWith(\"P-rc: \")) {\n            xmlStr = xmlStr.substring(6);\n        }\n        const parser = new XMLParser(RcMessage.xmlOptions);\n        const parsed = parser.parse(xmlStr);\n        return new RcMessage(parsed.Msg.Hdr.$, parsed.Msg.Bdy.$);\n    }\n    headers;\n    body;\n    constructor(headers, body) {\n        this.headers = headers;\n        this.body = body;\n    }\n    toXml() {\n        const builder = new XMLBuilder(RcMessage.xmlOptions);\n        const obj = {\n            Msg: {\n                Hdr: {\n                    $: this.headers,\n                },\n                Bdy: {\n                    $: this.body,\n                },\n            },\n        };\n        return builder.build(obj);\n    }\n}\nexport default RcMessage;\n","import SipMessage from \"../sip-message/index.js\";\nclass InboundMessage extends SipMessage {\n    static fromString(str) {\n        const sipMessage = SipMessage.fromString(str);\n        sipMessage.direction = \"inbound\";\n        return sipMessage;\n    }\n}\nexport default InboundMessage;\n","import { uuid } from \"../utils.js\";\nclass SipMessage {\n    static fromString(str) {\n        const sipMessage = new SipMessage();\n        const [init, ...body] = str.split(\"\\r\\n\\r\\n\");\n        sipMessage.body = body.join(\"\\r\\n\\r\\n\");\n        const [subject, ...headers] = init.split(\"\\r\\n\");\n        sipMessage.subject = subject;\n        sipMessage.headers = Object.fromEntries(headers.map((line) => line.split(\": \")));\n        if (sipMessage.headers.To && !sipMessage.headers.To.includes(\";tag=\")) {\n            sipMessage.headers.To += \";tag=\" + uuid(); // generate local tag\n        }\n        return sipMessage;\n    }\n    subject;\n    headers;\n    body;\n    direction;\n    constructor(subject = \"\", headers = {}, body = \"\") {\n        this.subject = subject;\n        this.headers = headers;\n        this.body = body\n            .trim()\n            .split(/[\\r\\n]+/)\n            .join(\"\\r\\n\");\n        if (this.body.length > 0) {\n            this.body += \"\\r\\n\";\n        }\n    }\n    toString() {\n        const r = [\n            this.subject,\n            ...Object.keys(this.headers).map((key) => `${key}: ${this.headers[key]}`),\n            \"\",\n            this.body,\n        ].join(\"\\r\\n\");\n        return r;\n    }\n    get shortString() {\n        return `${this.direction} - ${this.subject}`;\n    }\n}\nexport default SipMessage;\n","import SipMessage from \"../index.js\";\nclass OutboundMessage extends SipMessage {\n    static fromString(str) {\n        const sipMessage = SipMessage.fromString(str);\n        sipMessage.direction = \"outbound\";\n        return sipMessage;\n    }\n    constructor(subject = \"\", headers = {}, body = \"\") {\n        super(subject, headers, body);\n        this.direction = \"outbound\";\n        this.headers[\"Content-Length\"] = this.body.length.toString();\n        this.headers[\"User-Agent\"] = \"ringcentral-web-phone-2\";\n        this.headers[\"Max-Forwards\"] = \"70\";\n    }\n}\nexport default OutboundMessage;\n","import OutboundMessage from \"./index.js\";\nimport { branch } from \"../../utils.js\";\nlet cseq = Math.floor(Math.random() * 10000);\nclass RequestMessage extends OutboundMessage {\n    constructor(subject = \"\", headers = {}, body = \"\") {\n        super(subject, headers, body);\n        if (this.headers.CSeq === undefined) {\n            this.newCseq();\n        }\n    }\n    newCseq() {\n        this.headers.CSeq = `${++cseq} ${this.subject.split(\" \")[0]}`;\n    }\n    fork() {\n        const newMessage = new RequestMessage(this.subject, { ...this.headers }, this.body);\n        newMessage.newCseq();\n        if (newMessage.headers.Via) {\n            newMessage.headers.Via = newMessage.headers.Via.replace(/;branch=.+?$/, `;branch=${branch()}`);\n        }\n        return newMessage;\n    }\n}\nexport default RequestMessage;\n","import OutboundMessage from \"./index.js\";\nimport responseCodes from \"../response-codes.js\";\nclass ResponseMessage extends OutboundMessage {\n    constructor(inboundMessage, { responseCode, headers = {}, body = \"\", }) {\n        super(undefined, { ...headers }, body);\n        this.subject = `SIP/2.0 ${responseCode} ${responseCodes[responseCode]}`;\n        const keys = [\"Via\", \"From\", \"To\", \"Call-Id\", \"CSeq\"];\n        for (const key of keys) {\n            if (inboundMessage.headers[key]) {\n                this.headers[key] = inboundMessage.headers[key];\n            }\n        }\n    }\n}\nexport default ResponseMessage;\n","// Ref: https://en.wikipedia.org/wiki/List_of_SIP_response_codes'\nconst responseCodes = {\n    100: \"Trying\",\n    180: \"Ringing\",\n    181: \"Call is Being Forwarded\",\n    182: \"Queued\",\n    183: \"Session Progress\",\n    199: \"Early Dialog Terminated\",\n    200: \"OK\",\n    202: \"Accepted\",\n    204: \"No Notification\",\n    300: \"Multiple Choices\",\n    301: \"Moved Permanently\",\n    302: \"Moved Temporarily\",\n    305: \"Use Proxy\",\n    380: \"Alternative Service\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Conditional Request Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Unsupported URI Scheme\",\n    417: \"Unknown Resource-Priority\",\n    420: \"Bad Extension\",\n    421: \"Extension Required\",\n    422: \"Session Interval Too Small\",\n    423: \"Interval Too Brief\",\n    424: \"Bad Location Information\",\n    425: \"Bad Alert Message\",\n    428: \"Use Identity Header\",\n    429: \"Provide Referrer Identity\",\n    430: \"Flow Failed\",\n    433: \"Anonymity Disallowed\",\n    436: \"Bad Identity-Info\",\n    437: \"Unsupported Certificate\",\n    438: \"Invalid Identity Header\",\n    439: \"First Hop Lacks Outbound Support\",\n    440: \"Max-Breadth Exceeded\",\n    469: \"Bad Info Package\",\n    470: \"Consent Needed\",\n    480: \"Temporarily Unavailable\",\n    481: \"Call/Transaction Does Not Exist\",\n    482: \"Loop Detected\",\n    483: \"Too Many Hops\",\n    484: \"Address Incomplete\",\n    485: \"Ambiguous\",\n    486: \"Busy Here\",\n    487: \"Request Terminated\",\n    488: \"Not Acceptable Here\",\n    489: \"Bad Event\",\n    491: \"Request Pending\",\n    493: \"Undecipherable\",\n    494: \"Security Agreement Required\",\n    500: \"Server Internal Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Server Time-out\",\n    505: \"Version Not Supported\",\n    513: \"Message Too Large\",\n    555: \"Push Notification Service Not Supported\",\n    580: \"Precondition Failure\",\n    600: \"Busy Everywhere\",\n    603: \"Decline\",\n    604: \"Does Not Exist Anywhere\",\n    606: \"Not Acceptable\",\n    607: \"Unwanted\",\n    608: \"Rejected\",\n};\nexport default responseCodes;\n","import { v4 } from \"uuid\";\nimport md5 from \"blueimp-md5\";\nexport const uuid = () => v4();\nexport const branch = () => \"z9hG4bK-\" + uuid();\nconst generateResponse = (sipInfo, endpoint, nonce) => {\n    const ha1 = md5(`${sipInfo.authorizationId}:${sipInfo.domain}:${sipInfo.password}`);\n    const ha2 = md5(endpoint);\n    const response = md5(`${ha1}:${nonce}:${ha2}`);\n    return response;\n};\nexport const generateAuthorization = (sipInfo, nonce, method) => {\n    const authObj = {\n        \"Digest algorithm\": \"MD5\",\n        username: sipInfo.authorizationId,\n        realm: sipInfo.domain,\n        nonce,\n        uri: `sip:${sipInfo.domain}`,\n        response: generateResponse(sipInfo, `${method}:sip:${sipInfo.domain}`, nonce),\n    };\n    return Object.keys(authObj)\n        .map((key) => `${key}=\"${authObj[key]}\"`)\n        .join(\", \");\n};\nexport const withoutTag = (s) => s.replace(/;tag=.*$/, \"\");\nexport const extractAddress = (s) => s.match(/<(sip:.+?)>/)[1];\nexport const extractNumber = (s) => s.match(/<sip:(.+?)@/)[1];\nexport const extractTag = (peer) => {\n    const match = peer.match(/;tag=(.*)/);\n    return match ? match[1] : \"\";\n};\nexport const fakeDomain = uuid() + \".invalid\";\nexport const fakeEmail = uuid() + \"@\" + fakeDomain;\n","export default function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nexport const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nexport function getAllMatches(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n}\n\nexport const isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n}\n\nexport function isExist(v) {\n  return typeof v !== 'undefined';\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexport function merge(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n}\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexport function getValue(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};","'use strict';\n\nimport {getAllMatches, isName} from './util.js';\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexport function validate(xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nimport buildFromOrderedJs from './orderedJs2Xml.js';\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nexport default function Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0, []).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level, ajPath) {\n  let attrStr = '';\n  let val = '';\n  const jPath = ajPath.join('.')\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key === this.options.cdataPropName) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr && !this.ignoreAttributesFn(attr, jPath)) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      } else if (!attr) {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1, ajPath.concat(key));\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level, ajPath)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level, ajPath)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level, ajPath) {\n  const result = this.j2x(object, level + 1, ajPath.concat(key));\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nexport default function toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\n","import {isName} from '../util.js';\n\n//TODO: handle comments\nexport default function readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && hasSeq(xmlData, \"!ENTITY\",i)){\n                    i += 7; \n                    let entityName, val;\n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ entityName ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && hasSeq(xmlData, \"!ELEMENT\",i))  {\n                    i += 8;//Not supported\n                    const {index} = readElementExp(xmlData,i+1);\n                    i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!ATTLIST\",i)){\n                    i += 8;//Not supported\n                    // const {index} = readAttlistExp(xmlData,i+1);\n                    // i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!NOTATION\",i)) {\n                    i += 9;//Not supported\n                    const {index} = readNotationExp(xmlData,i+1);\n                    i = index;\n                }else if( hasSeq(xmlData, \"!--\",i) ) comment = true;\n                else throw new Error(`Invalid DOCTYPE`);\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst skipWhitespace = (data, index) => {\n    while (index < data.length && /\\s/.test(data[index])) {\n        index++;\n    }\n    return index;\n};\n\nfunction readEntityExp(xmlData, i) {    \n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n\n    // Skip leading whitespace after <!ENTITY\n    i = skipWhitespace(xmlData, i);\n\n    // Read entity name\n    let entityName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i]) && xmlData[i] !== '\"' && xmlData[i] !== \"'\") {\n        entityName += xmlData[i];\n        i++;\n    }\n    validateEntityName(entityName);\n\n    // Skip whitespace after entity name\n    i = skipWhitespace(xmlData, i);\n\n    // Check for unsupported constructs (external entities or parameter entities)\n    if (xmlData.substring(i, i + 6).toUpperCase() === \"SYSTEM\") {\n        throw new Error(\"External entities are not supported\");\n    }else if (xmlData[i] === \"%\") {\n        throw new Error(\"Parameter entities are not supported\");\n    }\n\n    // Read entity value (internal entity)\n    let entityValue = \"\";\n    [i, entityValue] = readIdentifierVal(xmlData, i, \"entity\");\n    i--;\n    return [entityName, entityValue, i ];\n}\n\nfunction readNotationExp(xmlData, i) {\n    // Skip leading whitespace after <!NOTATION\n    i = skipWhitespace(xmlData, i);\n\n    // Read notation name\n    let notationName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        notationName += xmlData[i];\n        i++;\n    }\n    validateEntityName(notationName);\n\n    // Skip whitespace after notation name\n    i = skipWhitespace(xmlData, i);\n\n    // Check identifier type (SYSTEM or PUBLIC)\n    const identifierType = xmlData.substring(i, i + 6).toUpperCase();\n    if (identifierType !== \"SYSTEM\" && identifierType !== \"PUBLIC\") {\n        throw new Error(`Expected SYSTEM or PUBLIC, found \"${identifierType}\"`);\n    }\n    i += identifierType.length;\n\n    // Skip whitespace after identifier type\n    i = skipWhitespace(xmlData, i);\n\n    // Read public identifier (if PUBLIC)\n    let publicIdentifier = null;\n    let systemIdentifier = null;\n\n    if (identifierType === \"PUBLIC\") {\n        [i, publicIdentifier ] = readIdentifierVal(xmlData, i, \"publicIdentifier\");\n\n        // Skip whitespace after public identifier\n        i = skipWhitespace(xmlData, i);\n\n        // Optionally read system identifier\n        if (xmlData[i] === '\"' || xmlData[i] === \"'\") {\n            [i, systemIdentifier ] = readIdentifierVal(xmlData, i,\"systemIdentifier\");\n        }\n    } else if (identifierType === \"SYSTEM\") {\n        // Read system identifier (mandatory for SYSTEM)\n        [i, systemIdentifier ] = readIdentifierVal(xmlData, i, \"systemIdentifier\");\n\n        if (!systemIdentifier) {\n            throw new Error(\"Missing mandatory system identifier for SYSTEM notation\");\n        }\n    }\n    \n    return {notationName, publicIdentifier, systemIdentifier, index: --i};\n}\n\nfunction readIdentifierVal(xmlData, i, type) {\n    let identifierVal = \"\";\n    const startChar = xmlData[i];\n    if (startChar !== '\"' && startChar !== \"'\") {\n        throw new Error(`Expected quoted string, found \"${startChar}\"`);\n    }\n    i++;\n\n    while (i < xmlData.length && xmlData[i] !== startChar) {\n        identifierVal += xmlData[i];\n        i++;\n    }\n\n    if (xmlData[i] !== startChar) {\n        throw new Error(`Unterminated ${type} value`);\n    }\n    i++;\n    return [i, identifierVal];\n}\n\nfunction readElementExp(xmlData, i) {\n    // <!ELEMENT br EMPTY>\n    // <!ELEMENT div ANY>\n    // <!ELEMENT title (#PCDATA)>\n    // <!ELEMENT book (title, author+)>\n    // <!ELEMENT name (content-model)>\n    \n    // Skip leading whitespace after <!ELEMENT\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    if (!validateEntityName(elementName)) {\n        throw new Error(`Invalid element name: \"${elementName}\"`);\n    }\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n    let contentModel = \"\";\n    // Expect '(' to start content model\n    if(xmlData[i] === \"E\" && hasSeq(xmlData, \"MPTY\",i)) i+=4;\n    else if(xmlData[i] === \"A\" && hasSeq(xmlData, \"NY\",i)) i+=2;\n    else if (xmlData[i] === \"(\") {\n        i++; // Move past '('\n\n        // Read content model\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            contentModel += xmlData[i];\n            i++;\n        }\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated content model\");\n        }\n\n    }else{\n        throw new Error(`Invalid Element Expression, found \"${xmlData[i]}\"`);\n    }\n    \n    return {\n        elementName,\n        contentModel: contentModel.trim(),\n        index: i\n    };\n}\n\nfunction readAttlistExp(xmlData, i) {\n    // Skip leading whitespace after <!ATTLIST\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    validateEntityName(elementName)\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute name\n    let attributeName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        attributeName += xmlData[i];\n        i++;\n    }\n\n    // Validate attribute name\n    if (!validateEntityName(attributeName)) {\n        throw new Error(`Invalid attribute name: \"${attributeName}\"`);\n    }\n\n    // Skip whitespace after attribute name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute type\n    let attributeType = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"NOTATION\") {\n        attributeType = \"NOTATION\";\n        i += 8; // Move past \"NOTATION\"\n\n        // Skip whitespace after \"NOTATION\"\n        i = skipWhitespace(xmlData, i);\n\n        // Expect '(' to start the list of notations\n        if (xmlData[i] !== \"(\") {\n            throw new Error(`Expected '(', found \"${xmlData[i]}\"`);\n        }\n        i++; // Move past '('\n\n        // Read the list of allowed notations\n        let allowedNotations = [];\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            let notation = \"\";\n            while (i < xmlData.length && xmlData[i] !== \"|\" && xmlData[i] !== \")\") {\n                notation += xmlData[i];\n                i++;\n            }\n\n            // Validate notation name\n            notation = notation.trim();\n            if (!validateEntityName(notation)) {\n                throw new Error(`Invalid notation name: \"${notation}\"`);\n            }\n\n            allowedNotations.push(notation);\n\n            // Skip '|' separator or exit loop\n            if (xmlData[i] === \"|\") {\n                i++; // Move past '|'\n                i = skipWhitespace(xmlData, i); // Skip optional whitespace after '|'\n            }\n        }\n\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated list of notations\");\n        }\n        i++; // Move past ')'\n\n        // Store the allowed notations as part of the attribute type\n        attributeType += \" (\" + allowedNotations.join(\"|\") + \")\";\n    } else {\n        // Handle simple types (e.g., CDATA, ID, IDREF, etc.)\n        while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n            attributeType += xmlData[i];\n            i++;\n        }\n\n        // Validate simple attribute type\n        const validTypes = [\"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"ENTITY\", \"ENTITIES\", \"NMTOKEN\", \"NMTOKENS\"];\n        if (!validTypes.includes(attributeType.toUpperCase())) {\n            throw new Error(`Invalid attribute type: \"${attributeType}\"`);\n        }\n    }\n\n    // Skip whitespace after attribute type\n    i = skipWhitespace(xmlData, i);\n\n    // Read default value\n    let defaultValue = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"#REQUIRED\") {\n        defaultValue = \"#REQUIRED\";\n        i += 8;\n    } else if (xmlData.substring(i, i + 7).toUpperCase() === \"#IMPLIED\") {\n        defaultValue = \"#IMPLIED\";\n        i += 7;\n    } else {\n        [i, defaultValue] = readIdentifierVal(xmlData, i, \"ATTLIST\");\n    }\n\n    return {\n        elementName,\n        attributeName,\n        attributeType,\n        defaultValue,\n        index: i\n    }\n}\n\nfunction hasSeq(data, seq,i){\n    for(let j=0;j<seq.length;j++){\n        if(seq[j]!==data[i+j+1]) return false;\n    }\n    return true;\n}\n\nfunction validateEntityName(name){\n    if (isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n","\nexport const defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n    captureMetaData: false,\n};\n   \nexport const buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n","'use strict';\n///@ts-check\n\nimport {getAllMatches, isExist} from '../util.js';\nimport xmlNode from './xmlNode.js';\nimport readDocType from './DocTypeReader.js';\nimport toNumber from \"strnum\";\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nexport default class OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (this.options.ignoreAttributes !== true && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      if (this.ignoreAttributesFn(attrName, jPath)) {\n        continue\n      }\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath, i);\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        const startIndex = i;\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath, startIndex);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath, startIndex){\n  // unset startIndex if not requested\n  if (!this.options.captureMetaData) startIndex = undefined;\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  } else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode, startIndex);\n  }else{\n    currentNode.addChild(childNode, startIndex);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = currentNode.child.length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n","import { buildOptions} from './OptionsBuilder.js';\nimport OrderedObjParser from './OrderedObjParser.js';\nimport prettify from './node2json.js';\nimport {validate} from \"../validator.js\";\nimport XmlNode from './xmlNode.js';\n\nexport default class XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n\n    /**\n     * Returns a Symbol that can be used to access the metadata\n     * property on a node.\n     * \n     * If Symbol is not available in the environment, an ordinary property is used\n     * and the name of the property is here returned.\n     * \n     * The XMLMetaData property is only present when `captureMetaData`\n     * is true in the options.\n     */\n    static getMetaDataSymbol() {\n        return XmlNode.getMetaDataSymbol();\n    }\n}\n","'use strict';\n\nimport XmlNode from './xmlNode.js';\n\nconst METADATA_SYMBOL = XmlNode.getMetaDataSymbol();\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nexport default function prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n      if (tagObj[METADATA_SYMBOL] !== undefined) {\n        val[METADATA_SYMBOL] = tagObj[METADATA_SYMBOL]; // copy over metadata\n      }\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","'use strict';\n\nlet METADATA_SYMBOL;\n\nif (typeof Symbol !== \"function\") {\n  METADATA_SYMBOL = \"@@xmlMetadata\";\n} else {\n  METADATA_SYMBOL = Symbol(\"XML Node Metadata\");\n}\n\nexport default class XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node, startIndex) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n    // if requested, add the startIndex\n    if (startIndex !== undefined) {\n      // Note: for now we just overwrite the metadata. If we had more complex metadata,\n      // we might need to do an object append here:  metadata = { ...metadata, startIndex }\n      this.child[this.child.length - 1][METADATA_SYMBOL] = { startIndex };\n    }\n  }\n  /** symbol used for metadata */\n  static getMetaDataSymbol() {\n    return METADATA_SYMBOL;\n  }\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nexport default function toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/.+[eE].+/)!== -1) { //eNotation\n        return resolveEnotation(str,trimmedStr,options);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1] || \"\";\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            const decimalAdjacentToLeadingZeros = sign ? // 0., -00., 000.\n                str[leadingZeros.length+1] === \".\" \n                : str[leadingZeros.length] === \".\";\n\n            //trim ending zeros for floating number\n            if(!options.leadingZeros //leading zeros are not allowed\n                && (leadingZeros.length > 1 \n                    || (leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros))){\n                // 00, 00.3, +03.24, 03, 03.24\n                return str;\n            }\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const parsedStr = String(num);\n\n                if( num === 0) return num;\n                if(parsedStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(parsedStr === \"0\") return num; //0.0\n                    else if(parsedStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( parsedStr === `${sign}${numTrimmedByZeros}`) return num;\n                    else return str;\n                }\n                \n                let n = leadingZeros? numTrimmedByZeros : trimmedStr;\n                if(leadingZeros){\n                    // -009 => -9\n                    return (n === parsedStr) || (sign+n === parsedStr) ? num : str\n                }else  {\n                    // +9\n                    return (n === parsedStr) || (n === sign+parsedStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\nconst eNotationRegx = /^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;\nfunction resolveEnotation(str,trimmedStr,options){\n    if(!options.eNotation) return str;\n    const notation = trimmedStr.match(eNotationRegx); \n    if(notation){\n        let sign = notation[1] || \"\";\n        const eChar = notation[3].indexOf(\"e\") === -1 ? \"E\" : \"e\";\n        const leadingZeros = notation[2];\n        const eAdjacentToLeadingZeros = sign ? // 0E.\n            str[leadingZeros.length+1] === eChar \n            : str[leadingZeros.length] === eChar;\n\n        if(leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;\n        else if(leadingZeros.length === 1 \n            && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)){\n                return Number(trimmedStr);\n        }else if(options.leadingZeros && !eAdjacentToLeadingZeros){ //accept with leading zeros\n            //remove leading 0s\n            trimmedStr = (notation[1] || \"\") + notation[3];\n            return Number(trimmedStr);\n        }else return str;\n    }else{\n        return str;\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substring(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}"],"names":["safeAdd","x","y","lsw","md5cmn","q","a","b","s","t","num","cnt","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","i","olda","oldb","oldc","oldd","length","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","undefined","length8","charCodeAt","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","rstrMD5","rawHMACMD5","k","key","data","hash","bkey","ipad","opad","concat","rstrHMACMD5","md5","string","raw","listeners","Map","tempListeners","on","eventName","listener","this","has","set","get","push","once","off","list","filter","l","emit","args","forEach","delete","removeAllListeners","clear","RcMessage","static","ignoreAttributes","attributeNamePrefix","attributesGroupName","format","suppressEmptyNode","fromXml","_xmlStr","xmlStr","startsWith","substring","parsed","xmlOptions","parse","Msg","Hdr","$","Bdy","headers","body","constructor","toXml","builder","obj","build","InboundMessage","fromString","str","sipMessage","direction","SipMessage","init","split","join","subject","Object","fromEntries","map","line","To","includes","trim","toString","keys","shortString","OutboundMessage","super","cseq","Math","floor","random","RequestMessage","CSeq","newCseq","fork","newMessage","Via","replace","ResponseMessage","inboundMessage","responseCode","uuid","branch","generateResponse","sipInfo","endpoint","nonce","ha1","authorizationId","domain","password","ha2","generateAuthorization","method","authObj","username","realm","uri","response","fakeDomain","fakeEmail","getIgnoreAttributesFn","Array","isArray","attrName","pattern","RegExp","test","nameStartChar","regexName","getAllMatches","regex","matches","match","exec","allmatches","startIndex","lastIndex","index","isName","isExist","v","defaultOptions","allowBooleanAttributes","unpairedTags","validate","xmlData","options","assign","tags","tagFound","reachedRoot","substr","readPI","err","isWhiteSpace","getErrorObject","getLineNumberForPosition","tagStartPos","readCommentAndCDATA","closingTag","tagName","tagname","msg","result","readAttributeStr","attrStr","value","attrStrStart","isValid","validateAttributeString","code","tagClosed","otg","pop","openPos","col","indexOf","afterAmp","validateAmpersand","JSON","stringify","char","start","angleBracketsCount","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","hasOwnProperty","re","validateNumberAmpersand","count","message","lineNumber","lines","textNodeName","cdataPropName","indentBy","suppressUnpairedNode","suppressBooleanAttributes","tagValueProcessor","attributeValueProcessor","preserveOrder","commentPropName","entities","val","processEntities","stopNodes","oneListGroup","Builder","isAttribute","ignoreAttributesFn","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","ajPath","j2x","buildTextValNode","buildObjectNode","repeat","name","prototype","jObj","arrayNodeName","jPath","call","Date","attr","buildAttrPairStr","newval","replaceEntitiesValue","arrLen","listTagVal","listTagAttr","j","item","textValue","Ks","L","closeTag","tagEndExp","piClosingChar","entity","EOL","jArray","indentation","arrToStr","arr","isPreviousElementTag","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","endsWith","attrMap","attrVal","lastIndexOf","readDocType","Error","hasBody","comment","exp","hasSeq","entityName","readEntityExp","regx","readElementExp","readNotationExp","skipWhitespace","validateEntityName","toUpperCase","entityValue","readIdentifierVal","notationName","identifierType","publicIdentifier","systemIdentifier","type","identifierVal","elementName","contentModel","seq","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","hex","leadingZeros","eNotation","alwaysCreateTextNode","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","attrs","captureMetaData","buildOptions","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","ampEntity","_","fromCodePoint","Number","parseInt","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","prefix","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","endIndex","rawTagName","lastTag","tagContent","child","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","search","trimStart","openTagCount","shouldParse","XMLParser","validationOption","orderedObjParser","orderedResult","addEntity","getMetaDataSymbol","METADATA_SYMBOL","prettify","node","compress","text","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","Symbol","XmlNode","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","byteToHex","slice","unsafeStringify","offset","toLowerCase","buf","rnds","RangeError","hexRegex","numRegex","consider","decimalPoint","toNumber","trimmedStr","skipLike","numStr","base","window","parse_int","notation","eNotationRegx","sign","eChar","eAdjacentToLeadingZeros","resolveEnotation","numTrimmedByZeros","trimZeros","decimalAdjacentToLeadingZeros","parsedStr","n"],"sourceRoot":""}
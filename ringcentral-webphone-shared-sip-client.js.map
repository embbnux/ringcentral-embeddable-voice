{"version":3,"file":"ringcentral-webphone-shared-sip-client.js","mappings":"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","sources":["webpack://ringcentral-embeddable/webpack/runtime/chunk loaded","webpack://ringcentral-embeddable/webpack/runtime/startup chunk dependencies","webpack://ringcentral-embeddable/./src/modules/WebphoneV2/SharedSipClient.worker.ts","webpack://ringcentral-embeddable/webpack/bootstrap","webpack://ringcentral-embeddable/webpack/runtime/compat get default export","webpack://ringcentral-embeddable/webpack/runtime/define property getters","webpack://ringcentral-embeddable/webpack/runtime/ensure chunk","webpack://ringcentral-embeddable/webpack/runtime/get javascript chunk filename","webpack://ringcentral-embeddable/webpack/runtime/get mini-css chunk filename","webpack://ringcentral-embeddable/webpack/runtime/global","webpack://ringcentral-embeddable/webpack/runtime/hasOwnProperty shorthand","webpack://ringcentral-embeddable/webpack/runtime/publicPath","webpack://ringcentral-embeddable/webpack/runtime/importScripts chunk loading","webpack://ringcentral-embeddable/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(64).then(next);\n};","// Run in SharedWorker\n\nimport EventEmitter from \"ringcentral-web-phone-beta-2/event-emitter\";\nimport RcMessage from \"ringcentral-web-phone-beta-2/rc-message/rc-message\";\nimport InboundMessage from \"ringcentral-web-phone-beta-2/sip-message/inbound\";\nimport OutboundMessage from \"ringcentral-web-phone-beta-2/sip-message/outbound/index\";\nimport RequestMessage from \"ringcentral-web-phone-beta-2/sip-message/outbound/request\";\nimport ResponseMessage from \"ringcentral-web-phone-beta-2/sip-message/outbound/response\";\nimport type { SipClient, SipClientOptions, SipInfo } from \"ringcentral-web-phone-beta-2/types\";\nimport {\n  branch,\n  fakeDomain,\n  fakeEmail,\n  generateAuthorization,\n  uuid,\n} from \"ringcentral-web-phone-beta-2/utils\";\n\nconst maxExpires = 60;\n\ntype SipClientStatus =\n  'registering' |\n  'registered' |\n  'unregistering' |\n  'unregistered' |\n  'registrationError';\n\ntype TransportStatus =\n  'connecting' |\n  'connected' |\n  'disconnecting' |\n  'reconnecting' |\n  'disconnected' |\n  'error';\n\nclass Logger {\n  public log(message: string, ...args: any[]) {\n    console.log('[INFO] ', message, ...args);\n  }\n\n  public warn(message: string, ...args: any[]) {\n    console.warn('[WARN] ', message, ...args);\n  }\n\n  public error(message: string, ...args: any[]) {\n    console.error('[ERROR] ', message, ...args);\n  }\n}\n\nconst logger = new Logger();\n\nclass Transport extends EventEmitter {\n  public wsc: WebSocket;\n  public logger: Logger;\n  public status: TransportStatus = 'disconnected';\n  private wsServers: {\n    server: string,\n    isError: boolean,\n    backup: boolean,\n  }[] = [];\n  private currentServer: {\n    server: string,\n    isError: boolean,\n    backup: boolean,\n  } | null = null;\n  private connectTimeoutHandle: NodeJS.Timeout;\n  private _connectPromise: Promise<void> | null = null;\n  private reconnectionAttempts: number = 0;\n  private maxReconnectionAttempts = 10;\n  private reconnectionTimeout = 4;\n  private connectionTimeout = 5;\n  // private disconnectPromise: Promise<void> | null = null;\n  private onMessage: (event: MessageEvent) => void;\n  private onClose: () => void;\n  private reconnectTimeoutHandle: NodeJS.Timeout;\n\n  constructor({\n    sipInfo,\n  }) {\n    super();\n    this.logger = logger;\n    this.currentServer = null;\n    this.reconnectionAttempts = 0;\n    this.maxReconnectionAttempts = this.wsServers.length === 1 ? 15 : 10;\n    this.reconnectionTimeout = this.wsServers.length === 1 ? 10 : 4;\n    this.connectionTimeout = 5;\n\n    if (sipInfo.outboundProxy) {\n      this.wsServers.push({\n        server: sipInfo.outboundProxy,\n        isError: false,\n        backup: false,\n      });\n    }\n    if (sipInfo.outboundProxyBackup) {\n      this.wsServers.push({\n        server: sipInfo.outboundProxyBackup,\n        isError: false,\n        backup: true,\n      });\n    }\n    if (this.wsServers.length === 0) {\n      throw new Error('No available servers');\n    }\n    this.onMessage = (event) => {\n      this.emit('message', event);\n    };\n    this.onClose = () => {\n      this.wsc.removeEventListener('message', this.onMessage);\n      this.wsc.removeEventListener('close', this.onClose);\n      this.wsc = null;\n      this.currentServer = null;\n      this.reconnectionAttempts = 0;\n      this.logger.log('Transport closed');\n      this.setStatus('disconnected');\n    };\n  }\n\n  public setStatus(status: TransportStatus) {\n    this.status = status;\n    this.emit('status', status);\n  }\n\n  public async connect(forceMain = false): Promise<void> {\n    if (this._connectPromise) {\n      return this._connectPromise;\n    }\n    try {\n      this._connectPromise = this._connect(forceMain);\n      await this._connectPromise;\n      this.setStatus('connected');\n      this._connectPromise = null;\n    } catch (e) {\n      this.logger.error('Connect failed', e);\n      this.setStatus('reconnecting');\n      this._connectPromise = null;\n      await this.reconnect();\n    }\n  }\n\n  public async _connect(forceMain): Promise<void> {\n    const server = this.currentServer || this.getNextServer(forceMain);\n    if (!server) {\n      throw new Error('No available servers');\n    }\n    if (this.status !== 'disconnected' && this.wsc) {\n      this.logger.warn('Attempted to connect while connected, disconnecting');\n      await this.disconnect();\n    }\n    this.setStatus('connecting');\n    this.wsc = new WebSocket(\n      \"wss://\" + server.server,\n      \"sip\",\n    );\n    if (this.debug) {\n      const wscSend = this.wsc.send.bind(this.wsc);\n      this.wsc.send = (message) => {\n        this.logger.log(`Sending...(${new Date()})\\n` + message);\n        return wscSend(message);\n      };\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      const openEventHandler = () => {\n        this.wsc.removeEventListener(\"open\", openEventHandler);\n        this.wsc.removeEventListener(\"error\", errorEventHandler);\n        clearTimeout(this.connectTimeoutHandle);\n        this.wsc.addEventListener(\"message\", this.onMessage);\n        this.wsc.addEventListener('close', this.onClose);\n        resolve();\n      };\n      const errorEventHandler = (e) => {\n        this.wsc.removeEventListener(\"error\", errorEventHandler);\n        this.wsc.removeEventListener(\"message\", this.onMessage);\n        clearTimeout(this.connectTimeoutHandle);\n        reject(e);\n      };\n      this.connectTimeoutHandle = setTimeout(() => {\n        this.wsc.close();\n        this.wsc.removeEventListener(\"open\", openEventHandler);\n        this.wsc.removeEventListener(\"error\", errorEventHandler);\n        this.wsc.removeEventListener(\"message\", this.onMessage);\n        reject(new Error('Connection timeout'));\n      }, this.connectionTimeout * 1000);\n      this.wsc.addEventListener(\"open\", openEventHandler);\n      this.wsc.addEventListener(\"error\", errorEventHandler);\n    });\n  }\n\n  getComputeRandomTimeout(reconnectionAttempts: number, randomMinInterval: number, randomMaxInterval: number) {\n    const randomInterval =\n        Math.floor(Math.random() * Math.abs(randomMaxInterval - randomMinInterval)) + randomMinInterval;\n    const retryOffset = ((reconnectionAttempts - 1) * (randomMinInterval + randomMaxInterval)) / 2;\n\n    return randomInterval + retryOffset;\n  }\n\n  public async reconnect(forceMain = false) {\n    if (this.reconnectionAttempts > 0) {\n      this.logger.warn('Reconnect attempt', this.reconnectionAttempts);\n    }\n    if (forceMain) {\n      await this.disconnect();\n      this.currentServer = this.getNextServer(true);\n      this.reconnectionAttempts = 0;\n      await this.connect();\n      return;\n    }\n    if (this.noAvailableServers()) {\n      this.logger.warn('No available servers');\n      this.setStatus('error');\n      this.reconnectionAttempts = 0;\n      this.currentServer = this.getNextServer(true);\n      return;\n    }\n    if ((this.status !== 'reconnecting' && this.status !== 'disconnected') && this.wsc) {\n      this.logger.warn('Attempted to reconnect while connected, disconnecting');\n      await this.disconnect();\n      await this.reconnect();\n      return;\n    }\n    this.reconnectionAttempts++;\n    const nextReconnectInterval = this.getComputeRandomTimeout(\n      this.reconnectionAttempts,\n      (this.reconnectionTimeout - 2) * 1000,\n      (this.reconnectionTimeout + 2) * 1000,\n    );\n    if (this.reconnectionAttempts > this.maxReconnectionAttempts) {\n      this.logger.warn('Max reconnection attempts reached for server', this.currentServer.server);\n      this.currentServer.isError = true;\n      this.reconnectionAttempts = 0;\n      this.currentServer = this.getNextServer();\n      await this.reconnect();\n      return;\n    }\n    this.logger.warn('Reconnect attempt', this.reconnectionAttempts, 'next reconnect in', nextReconnectInterval);\n    if (this.reconnectTimeoutHandle) {\n      clearTimeout(this.reconnectTimeoutHandle);\n    }\n    this.reconnectTimeoutHandle = setTimeout(\n      () => {\n        this.connect();\n      },\n      nextReconnectInterval,\n    );\n  }\n\n  public disconnect() {\n    if (this.status === 'disconnected') {\n      return;\n    }\n    this._disconnect();\n  }\n\n  public _disconnect() {\n    if (!this.wsc) {\n      return;\n    }\n    this.logger.log('Disconnecting');\n    this.setStatus('disconnecting');\n    this.wsc.close();\n    this.currentServer = null;\n    this.reconnectionAttempts = 0;\n  }\n\n  private noAvailableServers() {\n    for (const server of this.wsServers) {\n      if (!server.isError) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private getNextServer(forceMain = false) {\n    if (forceMain) {\n      return this.wsServers[0];\n    }\n    for (const server of this.wsServers) {\n      if (!server.isError) {\n        return server;\n      }\n    }\n    return this.wsServers[0];\n  }\n\n  dispose() {\n    this.removeAllListeners();\n    if (this.reconnectTimeoutHandle) {\n      clearTimeout(this.reconnectTimeoutHandle);\n    }\n    this._disconnect();\n    this.currentServer = null;\n    this.reconnectionAttempts = 0;\n  }\n}\n\nclass SharedWorkerSipClient extends EventEmitter implements SipClient {\n  public transport: Transport;\n  public logger: Logger;\n  public sipInfo: SipInfo;\n  public device: { id: string };\n  public instanceId: string;\n  private debug: boolean;\n  public status: SipClientStatus = 'unregistered';\n  public clientId: string;\n\n  private timeoutHandle: NodeJS.Timeout;\n\n  public constructor({\n    debug = false,\n  }: {\n    debug?: boolean;\n  } = {}) {\n    super();\n    this.debug = debug;\n    this.status = 'unregistered';\n    this.logger = logger;\n  }\n\n  public setStatus(status: SipClientStatus, error?: Error) {\n    this.status = status;\n    this.emit('status', status, error?.message);\n  }\n\n  public async start({\n    sipInfo,\n    instanceId,\n    device,\n    clientId,\n    force = false,\n    debug,\n  }: SipClientOptions) {\n    if (\n      this.transport &&\n      this.sipInfo.authorizationId === sipInfo.authorizationId &&\n      this.sipInfo.domain === sipInfo.domain &&\n      this.sipInfo.username === sipInfo.username &&\n      this.sipInfo.password === sipInfo.password &&\n      this.sipInfo.outboundProxy === sipInfo.outboundProxy &&\n      this.sipInfo.outboundProxyBackup === sipInfo.outboundProxyBackup &&\n      (this.status === 'registered' || this.status === 'registering') &&\n      this.clientId === clientId &&\n      !force\n    ) {\n      this.logger.warn('SipClient already started, current status:', this.status);\n      return;\n    }\n    this.logger.log('Starting SipClient');\n    this.sipInfo = sipInfo;\n    this.device = device;\n    this.instanceId = instanceId ?? sipInfo.authorizationId!;\n    this.debug = debug || false;\n    this.clientId = clientId;\n    if (this.transport) {\n      this.logger.warn('There is a transport, disposing it');\n      this.transport.dispose();\n    }\n    this.logger.log('Creating new transport');\n    this.transport = new Transport({\n      sipInfo,\n    });\n    this.transport.on('message', async (event) => {\n      const inboundMessage = InboundMessage.fromString(event.data);\n      if (inboundMessage.subject.startsWith(\"MESSAGE sip:\")) {\n        const rcMessage = await RcMessage.fromXml(inboundMessage.body);\n        if (\n          rcMessage.body.Cln &&\n          rcMessage.body.Cln !== this.sipInfo.authorizationId\n        ) {\n          return; // the message is not for this instance\n        }\n      }\n      if (this.debug) {\n        this.logger.log(`Receiving...(${new Date()})\\n` + event.data);\n      }\n      this.emit(\"inboundMessage\", inboundMessage);\n      if (\n        inboundMessage.subject.startsWith(\"MESSAGE sip:\") ||\n        inboundMessage.subject.startsWith(\"BYE sip:\") ||\n        inboundMessage.subject.startsWith(\"CANCEL sip:\") ||\n        inboundMessage.subject.startsWith(\"INFO sip:\") ||\n        inboundMessage.subject.startsWith(\"NOTIFY sip:\")\n      ) {\n        // Auto reply 200 OK to MESSAGE, BYE, CANCEL, INFO, NOTIFY\n        await this.reply(\n          new ResponseMessage(inboundMessage, { responseCode: 200 }),\n        );\n      }\n    });\n    if (this.timeoutHandle) {\n      clearInterval(this.timeoutHandle);\n    }\n    this.setStatus('registering');\n    this.transport.on('status', async (status) => {\n      this.logger.log('Transport status', status);\n      this.emit('transportStatus', status);\n      if (status === 'connected') {\n        this.logger.log('Transport connected, registering');\n        this.register(maxExpires);\n      }\n    });\n    await this.transport.connect();\n  }\n\n  public async dispose() {\n    if (this.status === 'unregistered' || this.status === 'unregistering') {\n      this.logger.warn('SipClient is already disposed, current status:', this.status);\n      return;\n    }\n    this.logger.log('Disposing SipClient');\n    try {\n      clearTimeout(this.timeoutHandle);\n      await this.unregister();\n      await this.transport?.dispose();\n      this.transport = null;\n      this.logger.log('SipClient disposed');\n    } catch (e) {\n      this.logger.error('SipClient dispose failed', e);\n      this.setStatus('registrationError');\n      await this.transport?.dispose();\n      this.transport = null;\n      return;\n    }\n  }\n\n  public async register(expires: number) {\n    try {\n      this.setStatus(expires > 0 ? 'registering' : 'unregistering');\n      await this._register(expires);\n      this.setStatus(expires > 0 ? 'registered' : 'unregistered');\n    } catch (e) {\n      if (expires > 0) {\n        this.logger.error('Registration failed', e);\n        this.setStatus('registrationError', e);\n      } else {\n        this.setStatus('unregistered');\n      }\n    }\n  }\n\n   private async _register(expires: number) {\n    const requestMessage = new RequestMessage(\n      `REGISTER sip:${this.sipInfo.domain} SIP/2.0`,\n      {\n        \"Call-Id\": uuid(),\n        Contact:\n          `<sip:${fakeEmail};transport=wss>;+sip.instance=\"<urn:uuid:${this.instanceId}>\";expires=${expires}`,\n        From:\n          `<sip:${this.sipInfo.username}@${this.sipInfo.domain}>;tag=${uuid()}`,\n        To: `<sip:${this.sipInfo.username}@${this.sipInfo.domain}>`,\n        Via: `SIP/2.0/WSS ${fakeDomain};branch=${branch()}`,\n        \"Client-id\": this.clientId,\n      },\n    );\n    const requestPromise = new Promise<InboundMessage>((resolve, reject) => {\n      // if cannot get response in 8 seconds, we close the connection\n      const closeHandle = setTimeout(() => {\n        this.logger.warn('Registration timeout, disconnecting');\n        this.transport?.disconnect();\n        reject(new Error('Registration timeout'));\n      }, 8000);\n      this.request(requestMessage).then((m) => {\n        this.logger.log('Registration request resolved, clearing timeout');\n        clearTimeout(closeHandle);\n        resolve(m);\n      }).catch((e) => {\n        this.logger.error('Registration request rejected:', e);\n        clearTimeout(closeHandle);\n        reject(e);\n      });\n    });\n    this.logger.log('Sending registration request');\n    let inboundMessage = await requestPromise;\n    this.logger.log('Received registration response');\n    const wwwAuth = inboundMessage.headers[\"Www-Authenticate\"] ||\n      inboundMessage!.headers[\"WWW-Authenticate\"];\n    if (wwwAuth) {\n      const nonce = wwwAuth.match(/, nonce=\"(.+?)\"/)![1];\n      const newMessage = requestMessage.fork();\n      newMessage.headers.Authorization = generateAuthorization(\n        this.sipInfo,\n        nonce,\n        \"REGISTER\",\n      );\n      inboundMessage = await this.request(newMessage);\n    } else if (inboundMessage.subject.startsWith(\"SIP/2.0 603 \")) {\n      throw new Error(\"Registration failed: \" + inboundMessage.subject);\n    }\n    if (expires > 0) { // not for unregister\n      const serverExpires = Number(\n        inboundMessage.headers.Contact.match(/;expires=(\\d+)/)![1],\n      );\n      this.timeoutHandle = setTimeout(\n        () => {\n          this.register(expires);\n        },\n        (serverExpires - 3) * 1000, // 3 seconds before server expires\n      );\n    }\n  }\n\n  public async unregister() {\n    this.logger.log('Unregistering');\n    await this.register(0);\n    this.logger.log('Unregistered');\n  }\n\n  public async request(message: string | RequestMessage): Promise<InboundMessage> {\n    return await this._send(message, true);\n  }\n\n  public async reply(message: string | ResponseMessage): Promise<void> {\n    await this._send(message, false);\n  }\n\n  private _send(\n    rawMessage: string | OutboundMessage,\n    waitForReply = false,\n  ): Promise<InboundMessage> {\n    let message: OutboundMessage;\n    if (typeof rawMessage === 'string') {\n      this.transport.wsc.send(rawMessage);\n      message = OutboundMessage.fromString(rawMessage);\n    } else {\n      this.transport.wsc.send(rawMessage.toString());\n      message = rawMessage;\n    }\n    this.emit(\"outboundMessage\", message);\n    if (!waitForReply) {\n      return new Promise<InboundMessage>((resolve) => {\n        resolve(new InboundMessage());\n      });\n    }\n    return new Promise<InboundMessage>((resolve) => {\n      const messageListerner = (inboundMessage: InboundMessage) => {\n        if (inboundMessage.headers.CSeq !== message.headers.CSeq) {\n          return;\n        }\n        if (inboundMessage.subject.startsWith(\"SIP/2.0 100 \")) {\n          return; // ignore\n        }\n        this.off(\"inboundMessage\", messageListerner);\n        resolve(inboundMessage);\n      };\n      this.on(\"inboundMessage\", messageListerner);\n    });\n  }\n}\n\nconst sipClient = new SharedWorkerSipClient();\nlet ports: MessagePort[] = [];\nlet mainPort: MessagePort;\nlet sharedState = {};\n\n// @ts-ignore\nonconnect = (event) => {\n  logger.log('port onconnect');\n  const port = event.ports[0];\n  ports.push(port);\n  if (ports.length === 1) {\n    logger.log('set first port as mainPort');\n    mainPort = port;\n  }\n  port.onmessage = async(event) => {\n    const { type, requestId, request } = event.data;\n    if (type === 'destroyPort') {\n      logger.log('destroyPort');\n      ports = ports.filter((p) => p !== port);\n      if (mainPort === port) {\n        mainPort = ports[0] || null;\n        logger.log('mainPort is destroyed, set new mainPort');\n      }\n      if (ports.length === 0) {\n        logger.log('No ports left, disposing SipClient');\n        await sipClient.dispose();\n      }\n      return;\n    }\n    if (type === 'setActive') {\n      const activeTabId = event.data.activeTabId;\n      logger.log('setActive', activeTabId);\n      mainPort = port;\n      if (!ports.find((p) => p === port)) {\n        logger.warn('no port found when active, add port to ports');\n        ports.push(port);\n      }\n      \n      ports.forEach((p) => {\n        if (p === port) {\n          return;\n        }\n        p.postMessage({\n          type: 'setActive',\n          activeTabId,\n        });\n      });\n    }\n    if (type === 'setSharedState') {\n      const state = event.data.state;\n      if (state) {\n        Object.keys(state).forEach((key) => {\n          sharedState[key] = state[key];\n        });\n        ports.forEach((p) => {\n          if (p === port) {\n            return;\n          }\n          p.postMessage({\n            type: 'setSharedState',\n            state,\n          });\n        });\n      }\n      return;\n    }\n    if (type === 'workerRequest') {\n      if (request.type === 'getSharedState') {\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: sharedState,\n        });\n        return;\n      }\n      if (request.type === 'getSipClientStatus') {\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: {\n            status: sipClient.status,\n            sipInfo: sipClient.sipInfo,\n            device: sipClient.device,\n            instanceId: sipClient.instanceId,\n          },\n        });\n        return;\n      }\n      if (request.type === 'startSipClient') {\n        if (!mainPort) {\n          logger.warn('No main port, set current port as main port');\n          mainPort = port;\n          if (!ports.find((p) => p === port)) {\n            ports.push(port);\n          }\n        }\n        logger.log('Received startSipClient request');\n        await sipClient.start(request.data);\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: 'OK',\n        });\n        return;\n      }\n      if (request.type === 'request') {\n        const response = await sipClient.request(request.data);\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: response.toString(),\n        });\n        return;\n      }\n      if (request.type === 'reply') {\n        await sipClient.reply(request.data);\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: 'OK',\n        });\n        return;\n      }\n      if (request.type === 'register') {\n        logger.log('Received register request');\n        await sipClient.register(request.data);\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: 'OK',\n        });\n        return;\n      }\n      if (request.type === 'unregister') {\n        logger.log('Received unregister request');\n        await sipClient.dispose();\n        port.postMessage({\n          type: 'workerResponse',\n          requestId,\n          response: 'OK',\n        });\n        return;\n      }\n      port.postMessage({\n        type: 'workerResponse',\n        requestId,\n        response: 'NOT_SUPPORTED',\n      });\n    }\n  };\n};\n\nsipClient.on('inboundMessage', (message) => {\n  let port = mainPort;\n  if (!port) {\n    port = ports[0];\n  }\n  if (!port) {\n    logger.warn('No main port, skipping inboundMessage');\n    return;\n  }\n  logger.log('Received inboundMessage, sending to main port');\n  port.postMessage({\n    type: 'inboundMessage',\n    message: message.toString(),\n  });\n});\n\nsipClient.on('outboundMessage', (message) => {\n  let port = mainPort;\n  if (!port) {\n    port = ports[0];\n  }\n  if (!port) {\n    logger.warn('No main port, skipping outboundMessage');\n    return;\n  }\n  logger.log('Sending outboundMessage to main port');\n  port.postMessage({\n    type: 'outboundMessage',\n    message: message.toString(),\n  });\n});\n\nsipClient.on('status', (status, error) => {\n  logger.log('sipClient status changed, sync to ports', status, error);\n  ports.forEach((port) => {\n    port.postMessage({\n      type: 'status',\n      status,\n      error,\n    });\n  });\n});\n\nsipClient.on('transportStatus', (status) => {\n  logger.log('sipClient transportStatus changed, sync to ports', status);\n  ports.forEach((port) => {\n    port.postMessage({\n      type: 'transportStatus',\n      status,\n    });\n  });\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [64], function() { return __webpack_require__(981103); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t464: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkringcentral_embeddable\"] = self[\"webpackChunkringcentral_embeddable\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","logger","log","message","_len","arguments","length","args","Array","_key","console","warn","_len2","_key2","error","_len3","_key3","Transport","EventEmitter","constructor","_ref","sipInfo","super","wsc","status","wsServers","currentServer","connectTimeoutHandle","_connectPromise","reconnectionAttempts","maxReconnectionAttempts","reconnectionTimeout","connectionTimeout","onMessage","onClose","reconnectTimeoutHandle","this","outboundProxy","push","server","isError","backup","outboundProxyBackup","Error","event","emit","removeEventListener","setStatus","connect","forceMain","undefined","_connect","e","reconnect","getNextServer","disconnect","WebSocket","debug","wscSend","send","bind","Date","Promise","resolve","reject","openEventHandler","errorEventHandler","clearTimeout","addEventListener","setTimeout","close","getComputeRandomTimeout","randomMinInterval","randomMaxInterval","Math","floor","random","abs","noAvailableServers","nextReconnectInterval","_disconnect","dispose","removeAllListeners","SharedWorkerSipClient","transport","device","instanceId","clientId","timeoutHandle","start","_ref2","force","authorizationId","domain","username","password","on","async","inboundMessage","InboundMessage","fromString","data","subject","startsWith","rcMessage","RcMessage","fromXml","body","Cln","reply","ResponseMessage","responseCode","clearInterval","register","_this$transport","unregister","_this$transport2","expires","_register","requestMessage","RequestMessage","uuid","Contact","fakeEmail","From","To","Via","fakeDomain","branch","requestPromise","closeHandle","_this$transport3","request","then","m","catch","wwwAuth","headers","nonce","match","newMessage","fork","Authorization","generateAuthorization","serverExpires","Number","_send","rawMessage","waitForReply","OutboundMessage","toString","messageListerner","CSeq","off","sipClient","mainPort","ports","sharedState","onconnect","port","onmessage","type","requestId","filter","p","activeTabId","find","forEach","postMessage","response","state","Object","keys","key","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","x","__webpack_exports__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace","installedChunks","chunkLoadingGlobal","self","parentChunkLoadingFunction","moreModules","runtime","pop"],"sourceRoot":""}